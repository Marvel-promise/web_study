myBatis核心文件配置：
    configuration配置
        properties属性
        将配置信息单独抽取成properties文件，该标签加载额外的properties文件
        <!--    通过properties标签加载外部的properties文件  -->
            <properties resource="jdbc.properties"/>
            <environments default="developement">
                <environment id="developement">
                    <transactionManager type="JDBC"></transactionManager>
                    <dataSource type="POOLED">
                        <property name="driver" value="${jdbc.driverClassName}"/>
                        <property name="url" value="${jdbc.url}"/>
                        <property name="username" value="${jdbc.user}"/>
                        <property name="password" value="${jdbc.password}"/>
                    </dataSource>
                </environmen
        settings设置
        typeAliases类型别名 注意：有顺序
        <!--    定义别名-->
            <typeAliases>
                <typeAlias type="com.Wang.domain.User" alias="user"/>
            </typeAliases>
        将java类设置成一个简短的名字
        typeHandlers类型处理器
        ObjectFactory对象工厂
        plugins插件
        environments环境
        1. environments标签
        其中,務管理器(transactionManager) 类型有两种:
        ●JDBC: 这个配置就是直接使用了JDBC的提交和回滚设置,它依赖于从数据源得到的连接来管理事务作用域。
        ●MANAGED: 这个配置几乎没做什么。它从来不提交或回滚一个连接, 而是让容器来管理事务的整个生命周期(比如JEE 应用服务器的上下文)。默认情况下它会关闭连接，然而- -些容器并不希望这样，因此需要将closeConnection属性设置为false来阻止它默认的关闭行为。
        其中，数据源(dataSource)类型有三种:
         ●UNPOOLED:这个数据源的实现只是每次被请求时打开和关闭连接。
        ●POOLED:这种数据源的实现利用“池”的概念将JDBC连接对象组织起来。
        ●JNDI: 这个数据源的实现是为了能在如EJB或应用服务器这类容器中使用，容器可以集中或在外部配置数据源,然后放置-个JNDI上下文的引用。
            环境变量
                transactionManager事务管理器
                dataSource数据源
        databaseIdProvider数据库厂商标识
        mappers 映射器
        2. mapper标签
        该标签的作用是加载映射的，加载方式有如下几种:
        ●使用相对于类路径的资源引用，例如: <mapper resource= "org/mybatis/builder/AuthorMapper.xml"/>
        ●使用完全限定资源定位符(URL) , 例如: <mapper url=" file://var/mappers/AuthorMapper.xml"/>
        ●使用映射器接口实现类的完全限定名，例如: <mapper class= "org.mybatis. builder.AuthorMapper"/>
        ●将包内的映射器接口实现全部注册为映射器，例如: <package name= "org.mybatis.builder"/>