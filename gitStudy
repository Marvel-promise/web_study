环境配置：
  设置用户信息： git config --global user.username "marvel"
                git config --global user.emil "***@**.com"
  查看配置信息： git config --list
                git config user.username
   获取git仓库
    在本地初始化git仓库
      git init
    从远程仓库克隆
      git clone 仓库地址
    git add 从工作区添加到暂存区 git commit 从暂存区放到版本库
  git工作目录的两种状态：
          untracked 未跟踪状态（未被纳入版本控制）
          tracked 已跟踪（被纳入版本控制）
            Unmodified 未修改状态
            Modified 已修改状态
            Staged 已暂存状态
 本地仓库命令：
  git status 查看文件状态
  git add 文件 将文件加入暂存区
  $ git reset HEAD hello.txt 将hello.txt 变为未暂存状态
 git commit -m "init hello.txt" 将文件提交
 git rm 文件 只是在本地工作区删除 还需要提交才能删除
 将文件添加至忽略列表：
      .gitignore文件为忽略文件方式 touch .gitignore (linux 命令)
      git log查看日志记录
       
远程仓库操作：
    查看远程仓库 git remote -v
    添加远程仓库 git remote add <shortname> <url>
    从远程仓库克隆 git clone [url] 所有全部全被下载下来（默认配置关联关系）
    移除无效远程仓库 git remote rm 移除时本地改变
    从远程仓库抓取与拉取  git pull/fetch pull 会自动合并/不会自动合并（git merge 分支，进行合并） $ git pull origin --allow-unrelated-histories （有数据时需要加入)
    推送到远程仓库 git push [remote-name] master
